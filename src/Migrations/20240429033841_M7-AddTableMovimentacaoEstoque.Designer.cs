// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pharma.Models;

#nullable disable

namespace Pharma.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240429033841_M7-AddTableMovimentacaoEstoque")]
    partial class M7AddTableMovimentacaoEstoque
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Pharma.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdCliente");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Pharma.Models.ItemPedido", b =>
                {
                    b.Property<int>("IdItemProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPedido")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QtProduto")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("VlTotalItem")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("VlUnitario")
                        .HasColumnType("TEXT");

                    b.HasKey("IdItemProduto");

                    b.HasIndex("IdPedido");

                    b.ToTable("ItemsPedidos");
                });

            modelBuilder.Entity("Pharma.Models.PedidoCliente", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DtPedido")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NtFiscal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalPedido")
                        .HasColumnType("TEXT");

                    b.HasKey("IdPedido");

                    b.HasIndex("IdCliente");

                    b.ToTable("PedidosClientes");
                });

            modelBuilder.Entity("Pharma.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AcessoUsuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Cargo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Pharma.Models.Cliente", b =>
                {
                    b.HasOne("Pharma.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Pharma.Models.ItemPedido", b =>
                {
                    b.HasOne("Pharma.Models.PedidoCliente", "PedidoCliente")
                        .WithMany()
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PedidoCliente");
                });

            modelBuilder.Entity("Pharma.Models.PedidoCliente", b =>
                {
                    b.HasOne("Pharma.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
